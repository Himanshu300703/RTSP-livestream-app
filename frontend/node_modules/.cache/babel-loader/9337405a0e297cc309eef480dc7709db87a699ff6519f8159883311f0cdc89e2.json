{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himan\\\\Desktop\\\\GPT-rtsp-livestream-app\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StreamVideoPlayer from './components/StreamVideoPlayer';\nimport OverlayEditor from './components/OverlayEditor';\n// Assuming your Flask API is running on 5000\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api/overlays';\nconst HLS_STREAM_URL = 'http://localhost:8080/live/stream.m3u8'; // MUST BE CONVERTED STREAM\n\nfunction App() {\n  _s();\n  const [overlays, setOverlays] = useState([]);\n  const [selectedOverlay, setSelectedOverlay] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch data (CRUD - Read)\n  const fetchOverlays = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(API_BASE_URL);\n      const data = await response.json();\n      setOverlays(data);\n    } catch (error) {\n      console.error(\"Error fetching overlays:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Simplified CRUD handlers (to be passed to OverlayEditor)\n  const handleSave = async overlayData => {\n    const method = overlayData._id ? 'PUT' : 'POST';\n    const url = overlayData._id ? `${API_BASE_URL}/${overlayData._id}` : API_BASE_URL;\n    try {\n      await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(overlayData)\n      });\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      console.error(\"Error saving overlay:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`${API_BASE_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      fetchOverlays();\n      setSelectedOverlay(null);\n    } catch (error) {\n      console.error(\"Error deleting overlay:\", error);\n    }\n  };\n  const handleNewOverlay = () => {\n    setSelectedOverlay({\n      content: 'NEW LOGO/TEXT',\n      x: 50,\n      y: 50,\n      width: 200,\n      height: 40,\n      color: '#FFFFFF',\n      fontSize: '24px'\n    });\n  };\n  useEffect(() => {\n    fetchOverlays();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 text-center\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800\",\n        children: \"\\uD83D\\uDCF9 RTSP Overlay Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: [\"Video source: \", HLS_STREAM_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 relative aspect-video shadow-xl rounded-lg overflow-hidden bg-gray-900\",\n        children: [/*#__PURE__*/_jsxDEV(StreamVideoPlayer, {\n          hlsUrl: HLS_STREAM_URL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), overlays.map(overlay => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute p-1 border-2 border-yellow-400 bg-opacity-70 bg-black text-white hover:border-blue-500 transition duration-150 ease-in-out ${(selectedOverlay === null || selectedOverlay === void 0 ? void 0 : selectedOverlay._id) === overlay._id ? 'ring-4 ring-blue-500' : ''}`,\n          style: {\n            left: `${overlay.x}px`,\n            top: `${overlay.y}px`,\n            width: `${overlay.width}px`,\n            height: `${overlay.height}px`,\n            color: overlay.color || '#FFFFFF',\n            fontSize: overlay.fontSize || '18px',\n            lineHeight: 1,\n            // Better for text alignment\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            cursor: 'pointer'\n          },\n          onClick: () => setSelectedOverlay(overlay),\n          children: overlay.content\n        }, overlay._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-1 bg-white p-6 shadow-xl rounded-lg border border-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-700\",\n          children: \"Overlay Management (CRUD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewOverlay,\n          className: \"w-full mb-4 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition\",\n          children: \"\\u2795 Create New Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t pt-4\",\n          children: /*#__PURE__*/_jsxDEV(OverlayEditor, {\n            overlay: selectedOverlay,\n            onSave: handleSave,\n            onDelete: handleDelete,\n            onClose: () => setSelectedOverlay(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ms4XrKAXFtCMS7P3VM6kQz9s/68=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","StreamVideoPlayer","OverlayEditor","jsxDEV","_jsxDEV","API_BASE_URL","HLS_STREAM_URL","App","_s","overlays","setOverlays","selectedOverlay","setSelectedOverlay","loading","setLoading","fetchOverlays","response","fetch","data","json","error","console","handleSave","overlayData","method","_id","url","headers","body","JSON","stringify","handleDelete","id","handleNewOverlay","content","x","y","width","height","color","fontSize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hlsUrl","map","overlay","style","left","top","lineHeight","display","alignItems","justifyContent","cursor","onClick","onSave","onDelete","onClose","_c","$RefreshReg$"],"sources":["C:/Users/himan/Desktop/GPT-rtsp-livestream-app/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport StreamVideoPlayer from './components/StreamVideoPlayer'; \r\nimport OverlayEditor from './components/OverlayEditor';\r\n// Assuming your Flask API is running on 5000\r\nconst API_BASE_URL = 'http://localhost:5000/api/overlays';\r\nconst HLS_STREAM_URL = 'http://localhost:8080/live/stream.m3u8'; // MUST BE CONVERTED STREAM\r\n\r\nfunction App() {\r\n  const [overlays, setOverlays] = useState([]);\r\n  const [selectedOverlay, setSelectedOverlay] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch data (CRUD - Read)\r\n  const fetchOverlays = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(API_BASE_URL);\r\n      const data = await response.json();\r\n      setOverlays(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching overlays:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Simplified CRUD handlers (to be passed to OverlayEditor)\r\n  const handleSave = async (overlayData) => {\r\n    const method = overlayData._id ? 'PUT' : 'POST';\r\n    const url = overlayData._id ? `${API_BASE_URL}/${overlayData._id}` : API_BASE_URL;\r\n    \r\n    try {\r\n      await fetch(url, {\r\n        method,\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(overlayData),\r\n      });\r\n      fetchOverlays(); \r\n      setSelectedOverlay(null); \r\n    } catch (error) {\r\n      console.error(\"Error saving overlay:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`${API_BASE_URL}/${id}`, { method: 'DELETE' });\r\n      fetchOverlays();\r\n      setSelectedOverlay(null); \r\n    } catch (error) {\r\n      console.error(\"Error deleting overlay:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNewOverlay = () => {\r\n      setSelectedOverlay({ \r\n          content: 'NEW LOGO/TEXT', \r\n          x: 50, y: 50, width: 200, height: 40, \r\n          color: '#FFFFFF', fontSize: '24px'\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOverlays();\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"p-8 text-center\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-8\">\r\n      <header className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-800\">📹 RTSP Overlay Dashboard</h1>\r\n        <p className=\"text-sm text-gray-500\">Video source: {HLS_STREAM_URL}</p>\r\n      </header>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        {/* Video Stream Area (2/3 width) */}\r\n        <div className=\"lg:col-span-2 relative aspect-video shadow-xl rounded-lg overflow-hidden bg-gray-900\">\r\n          <StreamVideoPlayer hlsUrl={HLS_STREAM_URL} />\r\n          \r\n          {/* Overlays Layer */}\r\n          {overlays.map((overlay) => (\r\n            <div\r\n              key={overlay._id}\r\n              className={`absolute p-1 border-2 border-yellow-400 bg-opacity-70 bg-black text-white hover:border-blue-500 transition duration-150 ease-in-out ${selectedOverlay?._id === overlay._id ? 'ring-4 ring-blue-500' : ''}`}\r\n              style={{\r\n                left: `${overlay.x}px`,\r\n                top: `${overlay.y}px`,\r\n                width: `${overlay.width}px`,\r\n                height: `${overlay.height}px`,\r\n                color: overlay.color || '#FFFFFF',\r\n                fontSize: overlay.fontSize || '18px',\r\n                lineHeight: 1, // Better for text alignment\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={() => setSelectedOverlay(overlay)}\r\n            >\r\n              {overlay.content}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Overlay Editor/CRUD Panel (1/3 width) */}\r\n        <div className=\"lg:col-span-1 bg-white p-6 shadow-xl rounded-lg border border-gray-100\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Overlay Management (CRUD)</h2>\r\n          <button \r\n            onClick={handleNewOverlay}\r\n            className=\"w-full mb-4 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition\"\r\n          >\r\n            ➕ Create New Overlay\r\n          </button>\r\n          \r\n          <div className=\"border-t pt-4\">\r\n            <OverlayEditor \r\n              overlay={selectedOverlay}\r\n              onSave={handleSave}\r\n              onDelete={handleDelete}\r\n              onClose={() => setSelectedOverlay(null)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}