{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himan\\\\Desktop\\\\GPT-rtsp-livestream-app\\\\frontend\\\\src\\\\components\\\\StreamVideoPlayer.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/StreamVideoPlayer.js\nimport React, { useEffect, useRef } from 'react';\nimport Hls from 'hls.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StreamVideoPlayer = ({\n  hlsUrl\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (Hls.isSupported() && videoRef.current) {\n      const video = videoRef.current;\n      const hls = new Hls();\n      hls.loadSource(hlsUrl);\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MANIFEST_PARSED, function () {\n        video.play(); // Auto-play the stream\n      });\n\n      // Basic error handling for the stream\n      hls.on(Hls.Events.ERROR, function (event, data) {\n        if (data.fatal) {\n          console.error(`HLS Fatal Error: ${data.details}`, data);\n          // Optional: Re-create HLS instance on fatal error\n        }\n      });\n    } else if (videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\n      // Fallback for native HLS support (e.g., Safari)\n      videoRef.current.src = hlsUrl;\n      videoRef.current.addEventListener('loadedmetadata', () => {\n        videoRef.current.play();\n      });\n    }\n    return () => {\n      // Cleanup\n      if (videoRef.current && videoRef.current.hls) {\n        videoRef.current.hls.destroy();\n      }\n    };\n  }, [hlsUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full bg-black\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"w-full h-full object-cover\",\n      controls: true // Provides basic controls: play, pause, volume\n      ,\n      poster: \"placeholder.jpg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(StreamVideoPlayer, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = StreamVideoPlayer;\nexport default StreamVideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"StreamVideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","Hls","jsxDEV","_jsxDEV","StreamVideoPlayer","hlsUrl","_s","videoRef","isSupported","current","video","hls","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","ERROR","event","data","fatal","console","error","details","canPlayType","src","addEventListener","destroy","className","children","ref","controls","poster","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/himan/Desktop/GPT-rtsp-livestream-app/frontend/src/components/StreamVideoPlayer.js"],"sourcesContent":["// frontend/src/components/StreamVideoPlayer.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Hls from 'hls.js';\r\n\r\nconst StreamVideoPlayer = ({ hlsUrl }) => {\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (Hls.isSupported() && videoRef.current) {\r\n      const video = videoRef.current;\r\n      const hls = new Hls();\r\n      \r\n      hls.loadSource(hlsUrl);\r\n      hls.attachMedia(video);\r\n\r\n      hls.on(Hls.Events.MANIFEST_PARSED, function() {\r\n        video.play(); // Auto-play the stream\r\n      });\r\n\r\n      // Basic error handling for the stream\r\n      hls.on(Hls.Events.ERROR, function (event, data) {\r\n        if (data.fatal) {\r\n          console.error(`HLS Fatal Error: ${data.details}`, data);\r\n          // Optional: Re-create HLS instance on fatal error\r\n        }\r\n      });\r\n    } else if (videoRef.current.canPlayType('application/vnd.apple.mpegurl')) {\r\n      // Fallback for native HLS support (e.g., Safari)\r\n      videoRef.current.src = hlsUrl;\r\n      videoRef.current.addEventListener('loadedmetadata', () => {\r\n        videoRef.current.play();\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      // Cleanup\r\n      if (videoRef.current && videoRef.current.hls) {\r\n        videoRef.current.hls.destroy();\r\n      }\r\n    };\r\n  }, [hlsUrl]);\r\n\r\n  return (\r\n    <div className=\"relative w-full h-full bg-black\">\r\n      <video \r\n        ref={videoRef} \r\n        className=\"w-full h-full object-cover\" \r\n        controls // Provides basic controls: play, pause, volume\r\n        poster=\"placeholder.jpg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamVideoPlayer;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIE,GAAG,CAACO,WAAW,CAAC,CAAC,IAAID,QAAQ,CAACE,OAAO,EAAE;MACzC,MAAMC,KAAK,GAAGH,QAAQ,CAACE,OAAO;MAC9B,MAAME,GAAG,GAAG,IAAIV,GAAG,CAAC,CAAC;MAErBU,GAAG,CAACC,UAAU,CAACP,MAAM,CAAC;MACtBM,GAAG,CAACE,WAAW,CAACH,KAAK,CAAC;MAEtBC,GAAG,CAACG,EAAE,CAACb,GAAG,CAACc,MAAM,CAACC,eAAe,EAAE,YAAW;QAC5CN,KAAK,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC;;MAEF;MACAN,GAAG,CAACG,EAAE,CAACb,GAAG,CAACc,MAAM,CAACG,KAAK,EAAE,UAAUC,KAAK,EAAEC,IAAI,EAAE;QAC9C,IAAIA,IAAI,CAACC,KAAK,EAAE;UACdC,OAAO,CAACC,KAAK,CAAC,oBAAoBH,IAAI,CAACI,OAAO,EAAE,EAAEJ,IAAI,CAAC;UACvD;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIb,QAAQ,CAACE,OAAO,CAACgB,WAAW,CAAC,+BAA+B,CAAC,EAAE;MACxE;MACAlB,QAAQ,CAACE,OAAO,CAACiB,GAAG,GAAGrB,MAAM;MAC7BE,QAAQ,CAACE,OAAO,CAACkB,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QACxDpB,QAAQ,CAACE,OAAO,CAACQ,IAAI,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX;MACA,IAAIV,QAAQ,CAACE,OAAO,IAAIF,QAAQ,CAACE,OAAO,CAACE,GAAG,EAAE;QAC5CJ,QAAQ,CAACE,OAAO,CAACE,GAAG,CAACiB,OAAO,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAK0B,SAAS,EAAC,iCAAiC;IAAAC,QAAA,eAC9C3B,OAAA;MACE4B,GAAG,EAAExB,QAAS;MACdsB,SAAS,EAAC,4BAA4B;MACtCG,QAAQ,OAAC;MAAA;MACTC,MAAM,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAhDIF,iBAAiB;AAAAkC,EAAA,GAAjBlC,iBAAiB;AAkDvB,eAAeA,iBAAiB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}